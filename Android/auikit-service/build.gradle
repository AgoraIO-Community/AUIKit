apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'
apply from: 'rtm.gradle'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30

        consumerProguardFiles "consumer-rules.pro"
        ndk.abiFilters 'arm64-v8a', 'armeabi-v7a' //, 'x86', 'x86-64'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    // Unit Test Libraries
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    // androidTestImplementation 'androidx.test.espresso:espressso-core:3.4.0'

    // Android Component Libraries
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.core:core-ktx:1.6.0'

    // Kotlin External Libraries
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    // Logging Libraries
    implementation 'com.orhanobut:logger:2.2.0'

    // Http Libraries
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    api 'com.google.code.gson:gson:2.9.0'
    implementation 'com.github.mrmike:ok2curl:0.8.0'
    implementation 'com.google.code.gson:gson:2.9.0'

    // Image Loading Libraries
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    kapt 'com.github.bumptech.glide:compiler:4.15.0'

    // Ui Libraries
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.github.AgoraIO-Community:LyricsView:1.1.1-beta.8'

    //agora chat
    api 'io.agora.rtc:chat-sdk:1.1.0'
    // api 'io.agora.rtc:agora-special-full:4.1.1.147'
    api 'io.agora.rtc:agora-special-voice:4.1.1.147'

}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'io.github.agoraio-community'
                artifactId = 'AUIKit-Service'
                version = '0.2.0'
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'io.github.agoraio-community'
                artifactId = 'AUIKit-Service'
                version = '0.2.0'
            }
        }
    }
}